<?xml version="1.0" encoding="UTF-8" ?>
<displays>
<folder>
	<name><![CDATA[SOSL]]></name>
	<tooltip><![CDATA[SOSL reports]]></tooltip>
	<description><![CDATA[Contains reports for SOSL]]></description>
		<display id="3b018ecf-0193-1000-8003-c0a801807479" type="" style="Table" enable="true">
		<name><![CDATA[SOSL server]]></name>
		<description><![CDATA[Details on the current state and configuration of the SOSL server]]></description>
		<tooltip><![CDATA[SOSL server state]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[WITH srv_state AS
       (SELECT CASE 
                 WHEN config_value = 'INACTIVE'
                 THEN sosl_constants.red
                 ELSE sosl_constants.green
               END AS status
             , config_value AS status_text  
          FROM sosl_config_v
         WHERE config_name = 'SOSL_SERVER_STATE'
       )
     , srv_def AS 
       (SELECT CASE 
                 WHEN config_value = 'RUN'
                 THEN sosl_constants.green
                 ELSE sosl_constants.red
               END AS modus
             , config_value AS server_mode
          FROM sosl_config_v 
         WHERE config_name = 'SOSL_RUNMODE' 
       )
     , srv_time_from AS 
       (SELECT config_value AS time_from
          FROM sosl_config_v 
         WHERE config_name = 'SOSL_START_JOBS' 
       )
     , srv_time_to AS 
       (SELECT config_value AS time_until
          FROM sosl_config_v 
         WHERE config_name = 'SOSL_STOP_JOBS' 
       )
     , srv_schema AS 
       (SELECT config_value AS sosl_schema
          FROM sosl_config_v 
         WHERE config_name = 'SOSL_SCHEMA' 
       )     
SELECT srv_schema.sosl_schema
     , srv_state.status
     , srv_state.status_text
     , srv_def.modus
     , srv_def.server_mode
     , CASE 
         WHEN     sosl_api.has_scripts > 0
              AND srv_state.status_text   = 'INACTIVE'
              AND sosl_api.db_in_time
         THEN sosl_constants.red
         WHEN      sosl_api.has_scripts > 0
              AND srv_state.status_text   = 'INACTIVE'
              AND NOT sosl_api.db_in_time
         THEN sosl_constants.yellow     
         ELSE sosl_constants.green
       END AS wait_ok  
     , sosl_api.has_scripts AS waiting_scripts
     , CASE WHEN sosl_api.db_in_time THEN sosl_constants.green ELSE sosl_constants.red END AS time_ok
     , srv_time_from.time_from
     , srv_time_to.time_until
     , TO_CHAR(SYSDATE, 'HH24:MM') AS db_time
     , 'The database time may differ from the server time. Check and adjust server time if run time mismatch discovered.' AS hint
  FROM srv_state
 CROSS JOIN srv_def 
 CROSS JOIN srv_time_from
 CROSS JOIN srv_time_to
 CROSS JOIN srv_schema]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SOSL run configuration]]></name>
			<description><![CDATA[The basic condiguration of SOSL that can be set using the database.]]></description>
			<tooltip><![CDATA[SOSL configuration]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[WITH wait_short AS
       (SELECT config_value AS wait_seconds_having_jobs  
          FROM sosl_config_v
         WHERE config_name = 'SOSL_DEFAULT_WAIT'
       )
     , wait_normal AS 
       (SELECT config_value AS wait_seconds_no_jobs  
          FROM sosl_config_v
         WHERE config_name = 'SOSL_NOJOB_WAIT'
       )
     , wait_pause AS 
       (SELECT config_value AS wait_seconds_server_paused  
          FROM sosl_config_v
         WHERE config_name = 'SOSL_PAUSE_WAIT'
       )
     , max_parall AS
       (SELECT config_value AS max_parallel_scripts  
          FROM sosl_config_v
         WHERE config_name = 'SOSL_MAX_PARALLEL'
       )
     
SELECT wait_short.wait_seconds_having_jobs
     , wait_normal.wait_seconds_no_jobs
     , wait_pause.wait_seconds_server_paused
     , max_parall.max_parallel_scripts
  FROM wait_short
 CROSS JOIN wait_normal
 CROSS JOIN wait_pause
 CROSS JOIN max_parall]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SOSL server paths]]></name>
			<description><![CDATA[The defined paths the SOSL server uses.]]></description>
			<tooltip><![CDATA[SOSL server paths]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT config_name AS path_definition
     , config_value AS local_path
     , config_description AS hint
  FROM sosl_config_v
 WHERE config_name IN ('SOSL_PATH_CFG', 'SOSL_PATH_TMP', 'SOSL_PATH_LOG')
 ORDER BY config_name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SOSL defaults]]></name>
			<description><![CDATA[Local defined defaults the SOSL server currently uses.]]></description>
			<tooltip><![CDATA[SOSL defaults]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT config_name
     , config_value
     , config_description AS hint
  FROM sosl_config_v
 WHERE config_name IN ( 'SOSL_START_LOG'
                      , 'SOSL_BASE_LOG'
                      , 'SOSL_EXT_LOG'
                      , 'SOSL_EXT_TMP'
                      , 'SOSL_EXT_LOCK'
                      , 'SOSL_EXT_ERROR'
                      )
 ORDER BY config_name]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SOSL statistics]]></name>
			<description><![CDATA[Displays the total runs and run states.]]></description>
			<tooltip><![CDATA[SOSL statistics]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT run_state 
     , script_count
     , CASE 
         WHEN run_state_num = sosl_constants.get_run_state_error
         THEN CASE 
                WHEN script_count = 0
                THEN sosl_constants.green
                ELSE sosl_constants.red
              END
         WHEN run_state_num = sosl_constants.get_run_state_finished
         THEN CASE 
                WHEN script_count = 0
                THEN sosl_constants.gray
                ELSE sosl_constants.green
              END
         ELSE CASE 
                WHEN script_count = 0
                THEN sosl_constants.gray
                ELSE sosl_constants.yellow
              END  
       END AS status       
  FROM sosl_run_stats_total_v
 UNION ALL
SELECT 'Available'
     , sosl_api.has_scripts AS script_count
     , CASE 
         WHEN sosl_api.has_scripts = 0
         THEN sosl_constants.green
         ELSE sosl_constants.yellow
       END AS status
  FROM dual]]></sql>
			</query>
		</display>
	</display>
	<display id="3b6b2e95-0193-1000-8001-c0a80180ff0d" type="" style="Table" enable="true">
		<name><![CDATA[SOSL run queue]]></name>
		<description><![CDATA[List of scripts running or finished ordered by latest script first]]></description>
		<tooltip><![CDATA[SOSL run queue]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT run_id
     , CASE 
         WHEN run_state_num = sosl_constants.get_run_state_error
         THEN sosl_constants.red
         WHEN run_state_num = sosl_constants.get_run_state_waiting
         THEN sosl_constants.gray
         WHEN run_state_num = sosl_constants.get_run_state_finished
         THEN sosl_constants.green
         ELSE sosl_constants.yellow
       END AS status  
     , script_file 
     , run_state
     , executor_name
     , ext_script_id
     , enqueued
     , running_since
     , finished
     , created
     , waiting
     , started
     , created_by
     , created_by_os
     , waiting_by 
     , waiting_by_os
     , enqueued_by 
     , enqueued_by_os
     , started_by
     , started_by_os
     , running_by
     , running_by_os
     , finished_by
     , finished_by_os
     , executor_id
  FROM sosl_run_queue_v]]></sql>
		</query>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[Executor details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM sosl_executors_v
 WHERE executor_id = :EXECUTOR_ID]]></sql>
				<binds>
					<bind id="EXECUTOR_ID">
						<prompt><![CDATA[EXECUTOR_ID]]></prompt>
						<tooltip><![CDATA[EXECUTOR_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[Executor statistics]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT run_state 
     , script_count
     , CASE 
         WHEN run_state_num = sosl_constants.get_run_state_error
         THEN CASE 
                WHEN script_count = 0
                THEN sosl_constants.green
                ELSE sosl_constants.red
              END
         WHEN run_state_num = sosl_constants.get_run_state_finished
         THEN CASE 
                WHEN script_count = 0
                THEN sosl_constants.gray
                ELSE sosl_constants.green
              END
         ELSE CASE 
                WHEN script_count = 0
                THEN sosl_constants.gray
                ELSE sosl_constants.yellow
              END  
       END AS status
  FROM sosl_run_stats_by_executor_v
 WHERE executor_id = :EXECUTOR_ID]]></sql>
			</query>
		</display>
		<display id="null" type="" style="Table" enable="true">
			<name><![CDATA[Error details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT log_type AS run_state
     , message
  FROM sosl_server_log_v    
 WHERE run_id   = :RUN_ID
   AND log_type = sosl_constants.get_log_error_type
 UNION ALL
SELECT 'ERROR' AS run_state 
     , TO_CHAR(SUBSTR(message, 1, 4000)) AS message
  FROM sosl_sperrorlog_v 
 WHERE identifier IN (SELECT sosl_identifier FROM sosl_server_log_v WHERE run_id = :RUN_ID)]]></sql>
				<binds>
					<bind id="RUN_ID">
						<prompt><![CDATA[RUN_ID]]></prompt>
						<tooltip><![CDATA[RUN_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="3cb69751-0193-1000-8008-c0a80180ff0d" type="" style="Table" enable="true">
		<name><![CDATA[SOSL logs]]></name>
		<description><![CDATA[Lists current SOSL logs.]]></description>
		<tooltip><![CDATA[SOSL logs]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT exec_time
     , log_type
     , CASE 
         WHEN log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)
         THEN sosl_constants.red
         WHEN log_type = sosl_constants.get_log_warning_type
         THEN sosl_constants.yellow
         WHEN log_type = sosl_constants.get_log_info_type
         THEN sosl_constants.gray 
         WHEN log_type = sosl_constants.get_log_success_type
         THEN sosl_constants.green
         ELSE sosl_constants.gray
       END AS status  
     , log_category
     , message
     , run_id
     , executor_id
     , guid
     , sosl_identifier
     , caller
     , ext_script_id
     , script_file
     , created_by
     , created_by_os
     , full_message
     , exec_timestamp
  FROM sosl_server_log_v]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Errors today]]></name>
			<description><![CDATA[Lists only todays errors in the SOSL server log]]></description>
			<tooltip><![CDATA[Errors today]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT exec_time
     , log_type
     , CASE 
         WHEN log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)
         THEN sosl_constants.red
         WHEN log_type = sosl_constants.get_log_warning_type
         THEN sosl_constants.yellow
         WHEN log_type = sosl_constants.get_log_info_type
         THEN sosl_constants.gray 
         WHEN log_type = sosl_constants.get_log_success_type
         THEN sosl_constants.green
         ELSE sosl_constants.gray
       END AS status  
     , log_category
     , message
     , run_id
     , executor_id
     , guid
     , sosl_identifier
     , caller
     , ext_script_id
     , script_file
     , created_by
     , created_by_os
     , full_message
     , exec_timestamp
  FROM sosl_server_log_v
 WHERE log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)
   AND TRUNC(exec_timestamp) = TRUNC(SYSDATE)]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Warnings today]]></name>
			<description><![CDATA[Lists only todays warnings in the SOSL server log]]></description>
			<tooltip><![CDATA[Warnings today]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT exec_time
     , log_type
     , CASE 
         WHEN log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)
         THEN sosl_constants.red
         WHEN log_type = sosl_constants.get_log_warning_type
         THEN sosl_constants.yellow
         WHEN log_type = sosl_constants.get_log_info_type
         THEN sosl_constants.gray 
         WHEN log_type = sosl_constants.get_log_success_type
         THEN sosl_constants.green
         ELSE sosl_constants.gray
       END AS status  
     , log_category
     , message
     , run_id
     , executor_id
     , guid
     , sosl_identifier
     , caller
     , ext_script_id
     , script_file
     , created_by
     , created_by_os
     , full_message
     , exec_timestamp
  FROM sosl_server_log_v
 WHERE log_type = sosl_constants.get_log_warning_type
   AND TRUNC(exec_timestamp) = TRUNC(SYSDATE)]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Errors all]]></name>
			<description><![CDATA[Lists all errors in the SOSL server log]]></description>
			<tooltip><![CDATA[Errors all]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT exec_time
     , log_type
     , CASE 
         WHEN log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)
         THEN sosl_constants.red
         WHEN log_type = sosl_constants.get_log_warning_type
         THEN sosl_constants.yellow
         WHEN log_type = sosl_constants.get_log_info_type
         THEN sosl_constants.gray 
         WHEN log_type = sosl_constants.get_log_success_type
         THEN sosl_constants.green
         ELSE sosl_constants.gray
       END AS status  
     , log_category
     , message
     , run_id
     , executor_id
     , guid
     , sosl_identifier
     , caller
     , ext_script_id
     , script_file
     , created_by
     , created_by_os
     , full_message
     , exec_timestamp
  FROM sosl_server_log_v
 WHERE log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Warnings all]]></name>
			<description><![CDATA[Lists all warnings in the SOSL server log]]></description>
			<tooltip><![CDATA[Warnings all]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT exec_time
     , log_type
     , CASE 
         WHEN log_type IN (sosl_constants.get_log_error_type, sosl_constants.get_log_fatal_type)
         THEN sosl_constants.red
         WHEN log_type = sosl_constants.get_log_warning_type
         THEN sosl_constants.yellow
         WHEN log_type = sosl_constants.get_log_info_type
         THEN sosl_constants.gray 
         WHEN log_type = sosl_constants.get_log_success_type
         THEN sosl_constants.green
         ELSE sosl_constants.gray
       END AS status  
     , log_category
     , message
     , run_id
     , executor_id
     , guid
     , sosl_identifier
     , caller
     , ext_script_id
     , script_file
     , created_by
     , created_by_os
     , full_message
     , exec_timestamp
  FROM sosl_server_log_v
 WHERE log_type = sosl_constants.get_log_warning_type]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Error details]]></name>
			<description><![CDATA[Error details if any from SOSLERRORLOG]]></description>
			<tooltip><![CDATA[Error details]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM sosl_sperrorlog_v
 WHERE identifier = :SOSL_IDENTIFIER]]></sql>
				<binds>
					<bind id="SOSL_IDENTIFIER">
						<prompt><![CDATA[SOSL_IDENTIFIER]]></prompt>
						<tooltip><![CDATA[SOSL_IDENTIFIER]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="415c18f8-0193-1000-8003-c0a801804315" type="" style="Table" enable="true">
		<name><![CDATA[SOSL executors]]></name>
		<description><![CDATA[Executors and related jobs]]></description>
		<tooltip><![CDATA[SOSL executors]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT executor_name
     , function_owner
     , use_mail
     , executor_active
     , executor_reviewed
     , fn_has_scripts
     , fn_get_next_script
     , fn_set_script_status
     , fn_send_db_mail
     , script_schema
     , cfg_file
     , executor_description
     , executor_id
     , created
     , created_by
     , created_by_os
     , updated
     , updated_by
     , updated_by_os
  FROM sosl_executors_v]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Jobs today]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT run_id
     , CASE 
         WHEN run_state_num = sosl_constants.get_run_state_error
         THEN sosl_constants.red
         WHEN run_state_num = sosl_constants.get_run_state_waiting
         THEN sosl_constants.gray
         WHEN run_state_num = sosl_constants.get_run_state_finished
         THEN sosl_constants.green
         ELSE sosl_constants.yellow
       END AS status  
     , script_file 
     , run_state
     , executor_name
     , ext_script_id
     , enqueued
     , running_since
     , finished
     , created
     , waiting
     , started
     , created_by
     , created_by_os
     , waiting_by 
     , waiting_by_os
     , enqueued_by 
     , enqueued_by_os
     , started_by
     , started_by_os
     , running_by
     , running_by_os
     , finished_by
     , finished_by_os
     , executor_id
  FROM sosl_run_queue_v
 WHERE executor_id                                               = :EXECUTOR_ID
   AND TRUNC(TO_TIMESTAMP(created, 'YYYY-MM-DD HH24:MI:SS.FF9')) = TRUNC(SYSDATE)]]></sql>
				<binds>
					<bind id="EXECUTOR_ID">
						<prompt><![CDATA[EXECUTOR_ID]]></prompt>
						<tooltip><![CDATA[EXECUTOR_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Run states today]]></name>
			<description><![CDATA[Run states statistics for current day]]></description>
			<tooltip><![CDATA[Run states today]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[-- get states
    WITH run_stats AS
         (SELECT /*+MATERIALIZE*/
                 executor_id
               , run_state_num
               , COUNT(*) AS script_count
            FROM sosl_run_queue_v
           WHERE TRUNC(TO_TIMESTAMP(created, 'YYYY-MM-DD HH24:MI:SS.FF9')) = TRUNC(SYSDATE)
              OR TRUNC(TO_TIMESTAMP(finished, 'YYYY-MM-DD HH24:MI:SS.FF9')) = TRUNC(SYSDATE)
              OR TRUNC(TO_TIMESTAMP(running_since, 'YYYY-MM-DD HH24:MI:SS.FF9')) = TRUNC(SYSDATE)
           GROUP BY executor_id
                  , run_state_num
         )
       , details AS 
         (SELECT sed.executor_name
               , sosl_constants.run_state_text(run_stats.run_state_num) AS run_state
               , run_stats.script_count
               , run_stats.executor_id
               , run_stats.run_state_num
            FROM run_stats
            LEFT OUTER JOIN sosl_executors_v sed
              ON run_stats.executor_id = sed.executor_id
           ORDER BY run_stats.run_state_num
                  , run_stats.executor_id
         )   
SELECT run_state 
     , script_count
     , CASE 
         WHEN run_state_num = sosl_constants.get_run_state_error
         THEN CASE 
                WHEN script_count = 0
                THEN sosl_constants.green
                ELSE sosl_constants.red
              END
         WHEN run_state_num = sosl_constants.get_run_state_finished
         THEN CASE 
                WHEN script_count = 0
                THEN sosl_constants.gray
                ELSE sosl_constants.green
              END
         ELSE CASE 
                WHEN script_count = 0
                THEN sosl_constants.gray
                ELSE sosl_constants.yellow
              END  
       END AS status
  FROM details
 WHERE executor_id = :EXECUTOR_ID]]></sql>
				<binds>
					<bind id="EXECUTOR_ID">
						<prompt><![CDATA[EXECUTOR_ID]]></prompt>
						<tooltip><![CDATA[EXECUTOR_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="832f61f7-0193-1000-8001-c0a801800d26" type="" style="Table" enable="true">
		<name><![CDATA[SOSL sessions]]></name>
		<description><![CDATA[List the current sessions of SOSL and executors]]></description>
		<tooltip><![CDATA[SOSL sessions]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[SELECT CASE
         WHEN status = 'ACTIVE'
          AND blocking_session_status IN ('NOT IN WAIT', 'NO HOLDER')
         THEN sosl_constants.green
         ELSE sosl_constants.yellow
       END AS run_state  
     , sid
     , serial#
     , status
     , blocking_session_status
     , wait_status
     , short_sql
     , sql_exec_start
     , logon_time
     , machine
     , terminal
     , module
     , program
     , event
     , action
     , schemaname
     , username
     , osuser
     , sql_id
     , inst_id
     , con_id
     , action_hash
     , module_hash
  FROM sosl_sessions_v
 ORDER BY machine, terminal, status]]></sql>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[SQL details]]></name>
			<description><![CDATA[Details on SQL executed by the selected session.]]></description>
			<tooltip><![CDATA[SQL details]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT *
  FROM sosl_session_sql_v
 WHERE sql_id             = :SQL_ID]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Blocking details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT lockwait
     , blocking_instance
     , blocking_session
     , final_blocking_session_status
     , final_blocking_instance
     , final_blocking_session
  FROM sosl_sessions_v 
 WHERE sid     = :SID
   AND serial# = :SERIAL#]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[Wait details]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT wait_class_id
     , wait_class#
     , wait_class
     , wait_time_micro
     , time_remaining_micro
     , total_time_waited_micro
     , heur_time_waited_micro
     , time_since_last_wait_micro
  FROM sosl_sessions_v 
 WHERE sid     = :SID
   AND serial# = :SERIAL#]]></sql>
			</query>
		</display>
	</display>
</folder>
</displays>